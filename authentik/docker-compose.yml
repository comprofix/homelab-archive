---
version: "3.4"

services:
  postgresql:
    container_name: authentik-postgresql
    image: docker.io/library/postgres:12-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - /mnt/nfs/docker/authentik/database:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: DGi1eYNYfqUS8YtULhLiR1iNMOmUgBGLk8wRd6g2
      POSTGRES_USER: authentik
      POSTGRES_DB: authentik
  redis:
    container_name: authentik-redis
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - redis:/data
  server:
    container_name: authentik-server
    image: ghcr.io/goauthentik/server:latest
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: DGi1eYNYfqUS8YtULhLiR1iNMOmUgBGLk8wRd6g2
      AUTHENTIK_SECRET_KEY: 8GN6wpejFpDqzhEpJxqYqhehkRRokxI9t3HXfEXVhw8KCHGepF
    volumes:
      - /mnt/nfs/docker/authentik/media:/media
      - /mnt/nfs/docker/authentik/templates:/templates
    ports:
      - 9000:9000
  worker:
    container_name: authentik-worker
    image: ghcr.io/goauthentik/server:latest
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: DGi1eYNYfqUS8YtULhLiR1iNMOmUgBGLk8wRd6g2
      AUTHENTIK_SECRET_KEY: 8GN6wpejFpDqzhEpJxqYqhehkRRokxI9t3HXfEXVhw8KCHGepF
    # `user: root` and the docker socket volume are optional.
    # See more for the docker socket integration here:
    # https://goauthentik.io/docs/outposts/integrations/docker
    # Removing `user: root` also prevents the worker from fixing the permissions
    # on the mounted folders, so when removing this make sure the folders have the correct UID/GID
    # (1000:1000 by default)
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /mnt/nfs/docker/authentik/media:/media
      - /mnt/nfs/docker/authentik/certs:/certs
      - /mnt/nfs/docker/authentik/templates:/templates

volumes:
  database:
    driver: local
  redis:
    driver: local
